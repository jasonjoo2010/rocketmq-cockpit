<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ndpmedia.rocketmq.cockpit.mybatis.mapper.BrokerMapper">

    <insert id="insert" parameterType="com.ndpmedia.rocketmq.cockpit.model.Broker" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO broker(cluster_name, broker_name, broker_id, address, version, dc, update_time)
        VALUES (#{clusterName}, #{brokerName}, #{brokerId}, #{address}, #{version}, #{dc}, CURRENT_TIMESTAMP)
    </insert>

    <insert id="createConsumerGroup">
        INSERT INTO broker_consumer_group_xref(broker_id, consumer_group_id)
        VALUES (#{brokerId}, #{consumerGroupId})
    </insert>

    <insert id="createTopic">
        INSERT INTO topic_broker_xref(broker_id, topic_id)
        VALUES (#{brokerId}, #{brokerId})
    </insert>

    <update id="refresh" parameterType="com.ndpmedia.rocketmq.cockpit.model.Broker">
        UPDATE broker
        SET update_time = CURRENT_TIMESTAMP
        WHERE cluster_name = #{clusterName} AND
        broker_name = #{brokerName} AND
        broker_id = #{brokerId}
    </update>

    <select id="exists" resultType="java.lang.Boolean" parameterType="com.ndpmedia.rocketmq.cockpit.model.Broker">
        SELECT count(1) > 0 FROM broker
        WHERE cluster_name = #{clusterName} AND
              broker_name = #{brokerName} AND
              broker_id = #{brokerId}
    </select>

    <select id="list" resultType="com.ndpmedia.rocketmq.cockpit.model.Broker">
        SELECT id, cluster_name AS clusterName, broker_name AS brokerName, broker_id AS brokerId,
        address, version, dc, update_time AS updateTime
        FROM broker
        WHERE 1 = 1
        <if test="clusterName != null">
            AND cluster_name = #{clusterName}
        </if>

        <if test="brokerName != null">
            AND broker_name = #{brokerName}
        </if>

        <if test="brokerId > 0">
            AND broker_id = #{brokerId}
        </if>

        <if test="dc > 0">
            AND dc = #{dc}
        </if>

        <if test="updateTime != null">
         <![CDATA[
            AND update_time >= #{updateTime}
         ]]>
        </if>
    </select>

    <select id="queryBrokerLoad" resultType="com.ndpmedia.rocketmq.cockpit.model.BrokerLoad">
        SELECT broker.dc AS dcId
             , broker.id AS brokerId
             , IFNULL(SUM(topic.read_queue_num ), 0) AS readQueueNum
             , IFNULL(SUM(topic.write_queue_num), 0) AS writeQueueNum
        FROM broker
            LEFT JOIN topic_broker_xref ON broker.id = topic_broker_xref.broker_id
            LEFT JOIN topic ON topic_broker_xref.topic_id = topic.id
            JOIN broker AS b ON b.id = topic_broker_xref.broker_id
        WHERE 1 = 1
        <if test="dc > 0">
            AND broker.dc = #{dcId}
        </if>

        <if test="brokerId != null">
            AND b.broker_id = #{brokerId}
        </if>

        GROUP BY broker.dc, broker.id
        ORDER BY write_queue_num, read_queue_num ASC
    </select>

    <select id="hasConsumerGroup" resultType="java.lang.Boolean">
        SELECT COUNT(1) > 0
        FROM broker_consumer_group_xref AS xref
        WHERE xref.broker_id = #{brokerId}
        AND xref.consumer_group_id = #{consumerGroupId}
    </select>

    <select id="get" resultType="com.ndpmedia.rocketmq.cockpit.model.Broker">
        SELECT id, cluster_name AS clusterName, broker_name AS brokerName, broker_id AS brokerId,
            address, version, dc, update_time AS updateTime
        FROM broker
        WHERE 1 = 1
        <if test="brokerId > 0">
            AND id = #{brokerId}
        </if>

        <if test="address != null">
            AND address = #{address}
        </if>
    </select>
</mapper>